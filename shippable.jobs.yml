jobs:
 # - name: sample_runShCI
  #  type: runSh
  #  steps:
  #    - IN: sample_prodcipipelines_runCI
       # showBuildStatus: true
  #    - TASK:
    #    - script: ls
  
  - name: oldddcintrunsh
    type: runSh
    steps:
      - IN: sample_prodCiPipelinesRepo
       # showBuildStatus: true
      - IN: ship_oldkubeint
      - TASK:
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_NAME=$SHIP_OLDKUBEINT_INTEGRATION_NAME
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_CLUSTERACCESSTYPE=$SHIP_OLDKUBEINT_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT=$SHIP_OLDKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_BASTIONHOSTIP=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONHOSTIP
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_BASTIONPRIVATEKEY=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_BASTIONPUBLICKEY=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONPUBLICKEY
      #- OUT: test_out_img
 
  - name: newddcintrunsh
    type: runSh
    allowPublicAccess: false
    steps:      
      - IN: sample_prodCiPipelinesRepo
       # showBuildStatus: true
      - IN: ship_newkubeint
      - TASK:
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_NAME=$SHIP_NEWKUBEINT_INTEGRATION_NAME
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_CLUSTERACCESSTYPE=$SHIP_NEWKUBEINT_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT=$SHIP_NEWKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_BASTIONHOSTIP=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONHOSTIP
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_BASTIONPRIVATEKEY=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo SHIP_NEWKUBEINT_INTEGRATION_BASTIONPUBLICKEY=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONPUBLICKEY
  
  - name: oldddcclurunsh
    type: runSh
    steps:
      - IN: oldkubecluster
      - TASK:
        - script: echo OLDKUBECLUSTER_INTEGRATION_NAME=$OLDKUBE_CLUSTER_INTEGRATION_NAME
        - script: echo OLDKUBECLUSTER_INTEGRATION_CLUSTERACCESSTYPE=$OLDKUBE_CLUSTER_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo OLDKUBECLUSTER_INTEGRATION_MASTERKUBECONFIGCONTENT=$OLDKUBE_CLUSTER_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo OLDKUBECLUSTER_INTEGRATION_BASTIONKUBECONFIGCONTENT=$OLDKUBE_CLUSTER_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo OLDKUBECLUSTER_INTEGRATION_BASTIONHOSTIP=$OLDKUBE_CLUSTER_INTEGRATION_BASTIONHOSTIP
        - script: echo OLDKUBECLUSTER_INTEGRATION_BASTIONPRIVATEKEY=$OLDKUBE_CLUSTER_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo OLDKUBECLUSTER_INTEGRATION_BASTIONPUBLICKEY=$OLDKUBE_CLUSTER_INTEGRATION_BASTIONPUBLICKEY
      #- OUT: test_out_img
 
  - name: newddcclurunsh
    type: runSh
    allowPublicAccess: false
    steps:      
      - IN: newkubecluster
      - TASK:
        - script: echo NEWKUBECLUSTER_INTEGRATION_NAME=$NEWKUBE_CLUSTER_INTEGRATION_NAME
        - script: echo NEWKUBECLUSTER_INTEGRATION_CLUSTERACCESSTYPE=$NEWKUBE_CLUSTER_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo NEWKUBECLUSTER_INTEGRATION_MASTERKUBECONFIGCONTENT=$NEWKUBE_CLUSTER_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo NEWKUBECLUSTER_INTEGRATION_BASTIONKUBECONFIGCONTENT=$NEWKUBE_CLUSTER_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo NEWKUBECLUSTER_INTEGRATION_BASTIONHOSTIP=$NEWKUBE_CLUSTER_INTEGRATION_BASTIONHOSTIP
        - script: echo NEWKUBECLUSTER_INTEGRATION_BASTIONPRIVATEKEY=$NEWKUBE_CLUSTER_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo NEWKUBECLUSTER_INTEGRATION_BASTIONPUBLICKEY=$NEWKUBE_CLUSTER_INTEGRATION_BASTIONPUBLICKEY
        
  - name: manifest_dep
    type: manifest
    steps:
      - IN: deploy_img       
  
  - name: manifest_dep2
    type: manifest
    steps:
      - IN: deploy_img2
      
  - name: deploynewkubeupgradetoplevel
    type: deploy
    method: upgrade
    workflow: serial
    steps:      
      - IN: manifest_dep
      #- IN: manifest_dep2
      - IN: newkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deploynewkubeupgradebottom
    type: deploy
    steps:      
      - IN: manifest_dep
      - IN: newkubecluster
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: upgrade
    flags: new-kube
    
  - name: deploynewkubedefault
    type: deploy
    steps:      
      - IN: manifest_dep
      - IN: newkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deployoldkubeupgradetoplevel
    type: deploy
    method: upgrade
    workflow: serial
    steps:      
      - IN: manifest_dep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
  
  - name: deployoldkubeupgradebottom
    type: deploy
    steps:      
      - IN: manifest_dep
      - IN: oldkubecluster
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: upgrade
    flags: old-kube
    
  - name: deployoldkubedefault
    type: deploy
    steps:      
      - IN: manifest_dep
      - IN: oldkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
    
  - name: deployoldkubebluegreen
    type: deploy
    workflow: parallel
    steps:      
      - IN: manifest_dep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
  
  - name: deployoldkubereplace
    type: deploy
    method: replace
    workflow: parallel
    steps:      
      - IN: manifest_dep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
    
  - name: deploynewkubebluegreen
    type: deploy
    #workflow: parallel
    steps:      
      - IN: manifest_dep
     # - IN: manifest_dep2
      - IN: newkubecluster
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: blueGreen
    flags: new-kube
  
  - name: deploynewkubereplace
    type: deploy
    #method: replace
    #workflow: parallel
    steps:      
      - IN: manifest_dep
      #- IN: manifest_dep2
      - IN: newkubecluster
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: replace
    flags: new-kube
    
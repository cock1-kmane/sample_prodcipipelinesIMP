jobs:
 # - name: sample_runShCI
  #  type: runSh
  #  steps:
  #    - IN: sample_prodcipipelines_runCI
       # showBuildStatus: true
  #    - TASK:
    #    - script: ls
  
  
 
  - name: newkubeprovision
    type: provision
    steps:
      - IN: newkubebastionloadbalancer
      - IN: ship_newkubesshbastion
  
  - name: oldkubeprovision
    type: provision
    steps:
      - IN: oldkubebastionloadbalancer
      - IN: ship_newkubesshbastion
      
  - name: oldddcintrunsh
    type: runSh
    steps:
      - IN: sample_prodCiPipelinesRepo
       # showBuildStatus: true
      - IN: shipoldkubeint
      - TASK:
        - script: echo SHIPOLDKUBEINT_INTEGRATIONn_NAME=$SHIP_OLDKUBEINT_INTEGRATION_NAME
        - script: echo SHIPOLDKUBEINT_INTEGRATION_CLUSTERACCESSTYPE=$SHIP_OLDKUBEINT_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo SHIPOLDKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT=$SHIP_OLDKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo SHIPOLDKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo SHIPOLDKUBEINT_INTEGRATION_BASTIONHOSTIP=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONHOSTIP
        - script: echo SHIPOLDKUBEINT_INTEGRATION_BASTIONPRIVATEKEY=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo SHIP_OLDKUBEINT_INTEGRATION_BASTIONPUBLICKEY=$SHIP_OLDKUBEINT_INTEGRATION_BASTIONPUBLICKEY
      #- OUT: test_out_img
      
  - name: newkubeintrunsh
    type: runSh
    allowPublicAccess: false
    steps:      
      - IN: sample_prodCiPipelinesRepo
       # showBuildStatus: true
      - IN: shipnewkubeint
      - TASK:
        - script: echo SHIPNEWKUBEINT_INTEGRATION_NAME=$SHIP_NEWKUBEINT_INTEGRATION_NAME
        - script: echo SHIPNEWKUBEINT_INTEGRATION_CLUSTERACCESSTYPE=$SHIP_NEWKUBEINT_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo SHIPNEWKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT=$SHIP_NEWKUBEINT_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo SHIPNEWKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo SHIPNEWKUBEINT_INTEGRATION_BASTIONHOSTIP=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONHOSTIP
        - script: echo SHIPNEWKUBEINT_INTEGRATION_BASTIONPRIVATEKEY=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo SHIPNEWKUBEINT_INTEGRATION_BASTIONPUBLICKEY=$SHIP_NEWKUBEINT_INTEGRATION_BASTIONPUBLICKEY
  
  - name: oldkubeclirunsh
    type: runSh
    steps:
      - IN: oldkubecli
      - TASK:
        - script: echo OLDKUBECLI_INTEGRATION_NAME=$OLDKUBECLI_INTEGRATION_NAME
        - script: echo OLDKUBECLI_INTEGRATION_CLUSTERACCESSTYPE=$OLDKUBECLI_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo OLDKUBECLI_INTEGRATION_MASTERKUBECONFIGCONTENT=$OLDKUBECLI_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo OLDKUBECLI_INTEGRATION_BASTIONKUBECONFIGCONTENT=$OLDKUBECLI_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo OLDKUBECLI_INTEGRATION_BASTIONHOSTIP=$OLDKUBECLI_INTEGRATION_BASTIONHOSTIP
        - script: echo OLDKUBECLI_INTEGRATION_BASTIONPRIVATEKEY=$OLDKUBECLI_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo OLDKUBECLI_INTEGRATION_BASTIONPUBLICKEY=$OLDKUBECLI_INTEGRATION_BASTIONPUBLICKEY
      #- OUT: test_out_img
 
  - name: newkubeclirunsh
    type: runSh
    allowPublicAccess: false
    steps:      
      - IN: newkubecli
      - TASK:
        - script: echo NEWKUBECLI_INTEGRATION_NAME=$NEWKUBECLI_INTEGRATION_NAME
        - script: echo NEWKUBECLI_INTEGRATION_CLUSTERACCESSTYPE=$NEWKUBECLI_INTEGRATION_CLUSTERACCESSTYPE
        - script: echo NEWKUBECLI_INTEGRATION_MASTERKUBECONFIGCONTENT=$NEWKUBECLI_INTEGRATION_MASTERKUBECONFIGCONTENT
        - script: echo NEWKUBECLI_INTEGRATION_BASTIONKUBECONFIGCONTENT=$NEWKUBECLI_INTEGRATION_BASTIONKUBECONFIGCONTENT
        - script: echo NEWKUBECLI_INTEGRATION_BASTIONHOSTIP=$NEWKUBECLI_INTEGRATION_BASTIONHOSTIP
        - script: echo NEWKUBECLI_INTEGRATION_BASTIONPRIVATEKEY=$NEWKUBECLI_INTEGRATION_BASTIONPRIVATEKEY
        - script: echo NEWKUBECLI_INTEGRATION_BASTIONPUBLICKEY=$NEWKUBECLI_INTEGRATION_BASTIONPUBLICKEY
        
  - name: manifestdep
    type: manifest
    steps:
      - IN: deploy_img       
  
  - name: manifest_dep2
    type: manifest
    steps:
      - IN: deploy_img2
  
  - name: deploynewkubebastionupgradetoplevel
    type: deploy
    method: upgrade
    workflow: serial
    steps:      
      - IN: manifestdep
      #- IN: manifest_dep2
      - IN: newkubebastioncluster
      - IN: ship_newkubesshbastion
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deploynewkubebastionupgradebottom
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: newkubebastioncluster
      - IN: ship_newkubesshbastion
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: upgrade
    flags: new-kube
    
  - name: deploynewkubebastiondefault
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: newkubebastioncluster
      - IN: ship_newkubesshbastion
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deploynewkubebastionbluegreen
    type: deploy
    #workflow: parallel
    steps:      
      - IN: manifestdep
     # - IN: manifest_dep2
      - IN: newkubebastioncluster
      - IN: ship_newkubesshbastion
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: blueGreen
    flags: new-kube
  
  - name: deploynewkubebastionreplace
    type: deploy
    #method: replace
    #workflow: parallel
    steps:      
      - IN: manifestdep
      #- IN: manifest_dep2
      - IN: newkubebastioncluster
      - IN: ship_newkubesshbastion
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: replace
    flags: new-kube
    
  - name: deploynewkubeupgradetoplevel
    type: deploy
    method: upgrade
    workflow: serial
    steps:      
      - IN: manifestdep
      #- IN: manifest_dep2
      - IN: newkubecluster
      - IN: newkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deploynewkubeupgradebottom
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: newkubecluster
      - IN: newkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: upgrade
    flags: new-kube
    
  - name: deploynewkubedefault
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: newkubecluster
      - IN: newkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: new-kube
  
  - name: deployoldkubeupgradetoplevel
    type: deploy
    method: upgrade
    workflow: serial
    steps:      
      - IN: manifestdep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: oldkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
  
  - name: deployoldkubeupgradebottom
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: oldkubecluster
      - IN: oldkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: upgrade
    flags: old-kube
    
  - name: deployoldkubedefault
    type: deploy
    steps:      
      - IN: manifestdep
      - IN: oldkubecluster
      - IN: oldkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
    
  - name: deployoldkubebluegreen
    type: deploy
    workflow: parallel
    steps:      
      - IN: manifestdep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: oldkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
  
  - name: deployoldkubereplace
    type: deploy
    method: replace
    workflow: parallel
    steps:      
      - IN: manifestdep
     # - IN: manifest_dep2
      - IN: oldkubecluster
      - IN: oldkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed  
    flags: old-kube
    
  - name: deploynewkubebluegreen
    type: deploy
    #workflow: parallel
    steps:      
      - IN: manifestdep
     # - IN: manifest_dep2
      - IN: newkubecluster
      - IN: newkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: blueGreen
    flags: new-kube
  
  - name: deploynewkubereplace
    type: deploy
    #method: replace
    #workflow: parallel
    steps:      
      - IN: manifestdep
      #- IN: manifest_dep2
      - IN: newkubecluster
      - IN: newkubebastionloadbalancer
      - IN: kube_dopts
      - TASK: managed 
        deployMethod: replace
    flags: new-kube
    